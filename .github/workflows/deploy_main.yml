name: CI/CD

on:
  push:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [20.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    - uses: actions/checkout@v3
    - name: Install and build frontend
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}

    - name: Make envfile
      uses: SpicyPizza/create-envfile@v2.0
      with:
        #This actually even though its thinks it wont
        envkey_POSTGRES_URL: ${{ secrets.POSTGRES_URL }}
        envkey_POSTGRES_URL_NON_POOLING: ${{ secrets.POSTGRES_URL_NON_POOLING }}
        envkey_POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
        envkey_POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
        envkey_POSTGRES_HOST: ${{ secrets.POSTGRES_HOST }}
        envkey_POSTGRES_DATABASE: ${{ secrets.POSTGRES_DATABASE }}
        envkey_JWT_SECRET: ${{ secrets.JWT_SECRET }}
        envkey_BCRYPT_SALT_ROUNDS: ${{ secrets.BCRYPT_SALT_ROUNDS }}
        envkey_RESEND_API_KEY: ${{ secrets.RESEND_API_KEY }}
        envkey_BODY_SIZE_LIMIT: ${{ secrets.BODY_SIZE_LIMIT }}
    
    - run: npm i
    - run: npm run build
    
    - name: Stop running deployment
      continue-on-error: true
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.PRODUCTION_SERVER_HOST_NAME }}
        username: ${{ secrets.PRODUCTION_SERVER_USER }}
        key: ${{ secrets.NODE_SERVER_SSH_KEY }}
        port:  ${{ secrets.PRODUCTION_SERVER_PORT }}
        script: |
          pm2 delete index

    - name: Delete old deployment
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.PRODUCTION_SERVER_HOST_NAME }}
        username: ${{ secrets.PRODUCTION_SERVER_USER }}
        key: ${{ secrets.NODE_SERVER_SSH_KEY }}
        port:  ${{ secrets.PRODUCTION_SERVER_PORT }}
        script: |
          rm -rf /home/opgbank/build

    - name: Deploy to server
      uses: appleboy/scp-action@master
      with:
        host: ${{ secrets.PRODUCTION_SERVER_HOST_NAME }}
        username: ${{ secrets.PRODUCTION_SERVER_USER }}
        key: ${{ secrets.NODE_SERVER_SSH_KEY }}
        port:  ${{ secrets.PRODUCTION_SERVER_PORT }}
        source: "build/*" # Update this with the path to your build directory
        target: "/home/opgbank/build" # Update this with the target path on your server
        strip_components: 1

    - name: Deploy to server part 2
      uses: appleboy/scp-action@master
      with:
        host: ${{ secrets.PRODUCTION_SERVER_HOST_NAME }}
        username: ${{ secrets.PRODUCTION_SERVER_USER }}
        key: ${{ secrets.NODE_SERVER_SSH_KEY }}
        port:  ${{ secrets.PRODUCTION_SERVER_PORT }}
        source: "node_modules/*" # Update this with the path to your build directory
        target: "/home/opgbank/build" # Update this with the target path on your server
        strip_components: 0
            
    - name: Deploy to server part 3
      uses: appleboy/scp-action@master
      with:
        host: ${{ secrets.PRODUCTION_SERVER_HOST_NAME }}
        username: ${{ secrets.PRODUCTION_SERVER_USER }}
        key: ${{ secrets.NODE_SERVER_SSH_KEY }}
        port:  ${{ secrets.PRODUCTION_SERVER_PORT }}
        source: "package.json" # Update this with the path to your build directory
        target: "/home/opgbank/build" # Update this with the target path on your server
        strip_components: 0

    - name: Deploy to server part 4
      uses: appleboy/scp-action@master
      with:
        host: ${{ secrets.PRODUCTION_SERVER_HOST_NAME }}
        username: ${{ secrets.PRODUCTION_SERVER_USER }}
        key: ${{ secrets.NODE_SERVER_SSH_KEY }}
        port:  ${{ secrets.PRODUCTION_SERVER_PORT }}
        source: "package-lock.json" # Update this with the path to your build directory
        target: "/home/opgbank/build" # Update this with the target path on your server
        strip_components: 0

    # - name: symlink data folder
    #   uses: appleboy/ssh-action@master
    #   with:
    #     host: ${{ secrets.PRODUCTION_SERVER_HOST_NAME }}
    #     username: ${{ secrets.PRODUCTION_SERVER_USER }}
    #     key: ${{ secrets.NODE_SERVER_SSH_KEY }}
    #     port:  ${{ secrets.PRODUCTION_SERVER_PORT }}
    #     script: |
    #       ln -s /home/opgbank/data/ uploads

    - name: Copy env file
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.PRODUCTION_SERVER_HOST_NAME }}
        username: ${{ secrets.PRODUCTION_SERVER_USER }}
        key: ${{ secrets.NODE_SERVER_SSH_KEY }}
        port:  ${{ secrets.PRODUCTION_SERVER_PORT }}
        script: |
          cd /home/opgbank
          cp .env /home/opgbank/build/.env

    - name: Start deployment
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.PRODUCTION_SERVER_HOST_NAME }}
        username: ${{ secrets.PRODUCTION_SERVER_USER }}
        key: ${{ secrets.NODE_SERVER_SSH_KEY }}
        port:  ${{ secrets.PRODUCTION_SERVER_PORT }}
        script: |
          cd /home/opgbank/build
          nohup node -r dotenv/config index.js > output.log 2>&1 &  

  